[
  {
    "objectID": "02_analysis.html",
    "href": "02_analysis.html",
    "title": "R coding to calculate standardised rates and ratios from cancer registry data",
    "section": "",
    "text": "Code\n# install.packages(\"pacman\")\npacman::p_load(\n        here,\n        tidyverse,\n        # Rcan, # package for Cancer Registry Data Analysis and Visualisation\n        PHEindicatormethods, # package for standardising rates\n        # sf, # for spatial functions\n        DT # package for table formatting and styling\n)\n\n# Read in the pre-processed data -------------------------------------\n\n# source(here(\"code\", \"01_prep.R\"))\n# Most recent data, from CI5-XII\nswiss_XII &lt;- readRDS(here(\"data\", \"generated_data\", \"swiss_XII.rds\"))\n# National data, from CI5-XII\nswiss_ref_XII &lt;- readRDS(here(\"data\", \"generated_data\", \"swiss_ref_XII.rds\"))\n# Annual data, from CI5-I to CI5-XII\nswiss_plus &lt;- readRDS(here(\"data\", \"generated_data\", \"swiss_plus.rds\"))\n# # Canton polygons data\n# canton_boundaries &lt;- readRDS(here(\"data\", \"generated_data\", \"canton_boundaries.rds\"))\nCode\n/* set DT table fontsizes */\nth { font-size: 11px; } /* header font */\ntd { font-size: 11px; } /* cell font */"
  },
  {
    "objectID": "02_analysis.html#ci5-xii-2013-2017",
    "href": "02_analysis.html#ci5-xii-2013-2017",
    "title": "R coding to calculate standardised rates and ratios from cancer registry data",
    "section": "CI5 XII (2013-2017)",
    "text": "CI5 XII (2013-2017)\nThis section uses data from Volume XII of the IARC’s “Cancer Incidence in Five Continents (CI5)” collaboration: https://ci5.iarc.fr/ci5-xii/download. The full dataset was then restricted to data from Switzerland-based cancer registries only.\nWorld and European Standard Populations were downloaded from: https://www.opendata.nhs.scot/dataset/standard-populations\nThe data pre-processing code can be found in the 01_prep.R file on the GitHub repository for this page.\n\nDirect standardisation for age-standardised rates\n\n\n\n\n\n\nNote\n\n\n\nWhen using the calculate_dsr() function from the PHEindicatormethods package, when the cases within the strata are less than 10 the DSR is suppressed (“When the total count is &lt; 10 DSRs are not reliable and will therefore be suppressed in the output”).\n\n\n\nUsing European Standard PopulationUsing World Standard Population\n\n\n\n\nCode\n# \"When the total count is &lt; 10 DSRs are not reliable and will therefore be suppressed in the output.\" (from the `PHEindicatormethods::calculate_dsr()` funtion)\n\n## European Standard Population\ndsr_swiss_ESP &lt;- swiss_XII |&gt; \n        # filter(\n        #         cancer_label %in% c(\"Colon\")\n        #         , id_region %in% c(\"Geneva\", \"Vaud\")\n        # ) |&gt; \n        # Add grouping variables of interest\n        group_by(period, cancer_label, id_region, sex) |&gt; \n        PHEindicatormethods::calculate_dsr(\n                x = cases, # field containing count of events\n                n = py, # field containing population denominators\n                stdpop = EuropeanStandardPopulation, # field containing standard populations\n                type = \"standard\"\n        ) |&gt; \n        mutate(crude_rate = total_count/total_pop*100000) |&gt; \n        relocate(crude_rate, .before = value) |&gt; \n        rename(cases = total_count, ASRate = value, lower_CI = lowercl, upper_CI = uppercl) |&gt; \n        mutate(across(c(crude_rate:upper_CI), ~ round(.x, 2)))\n\n\n\nPlotsTable\n\n\n\n\nCode\ndsr_swiss_ESP |&gt; \n        filter(cancer_label %in% c(\"All sites\", \"All sites but skin\", \"Other skin\")) |&gt; \n        ggplot(aes(x = ASRate, y = id_region, color = sex, fill = sex))+\n        geom_col(position = position_dodge(width = 0.4))+\n        theme_bw()+\n        labs(x = \"Age-standardised incidence rate, per 100,000\", \n             y = NULL,\n             color = NULL, fill = NULL)+\n        geom_errorbarh(aes(xmin = lower_CI, xmax = upper_CI),\n                       height = 0.4, \n                       linewidth = 0.5,\n                       position = position_dodge(width = 0.4))+\n        facet_wrap(.~cancer_label, \n                   labeller = label_wrap_gen(),\n                   ncol = 5)+\n        theme(legend.position = \"top\")\n\n\n\n\n\n\n\n\n\n\n\nCode\ndsr_swiss_ESP |&gt; \n        filter(!cancer_label %in% c(\"All sites\", \"All sites but skin\", \"Other skin\")) |&gt; \n        # filter(cancer_label %in% c(\"Breast\", \"Colon\", \"Adrenal gland\")) |&gt;\n        ggplot(aes(x = ASRate, y = id_region, color = sex, fill = sex))+\n        geom_col(position = position_dodge(width = 0.4))+\n        theme_bw()+\n        labs(x = \"Age-standardised incidence rate, per 100,000\", \n             y = NULL,\n             color = NULL, fill = NULL)+\n        geom_errorbarh(aes(xmin = lower_CI, xmax = upper_CI),\n                       height = 0.4, \n                       linewidth = 0.5,\n                       position = position_dodge(width = 0.4))+\n        facet_wrap(.~cancer_label, \n                   labeller = label_wrap_gen(),\n                   ncol = 5)+\n        theme(legend.position = \"top\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ndsr_swiss_ESP |&gt; \n        DT::datatable(\n                filter = \"top\",\n                options = list(\n                        pageLength = 26 \n                ),\n                rownames = FALSE, # set to FALSE for cleaner look\n                class = 'cell-border stripe hover nowrap compact'\n        )\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\n# \"When the total count is &lt; 10 DSRs are not reliable and will therefore be suppressed in the output.\" (from the `PHEindicatormethods::calculate_dsr()` funtion)\n\n## European Standard Population\ndsr_swiss_WSP &lt;- swiss_XII |&gt; \n        # filter(\n        #         cancer_label %in% c(\"Colon\")\n        #         , id_region %in% c(\"Geneva\", \"Vaud\")\n        # ) |&gt; \n        # Add grouping variables of interest\n        group_by(period, cancer_label, id_region, sex) |&gt; \n        PHEindicatormethods::calculate_dsr(\n                x = cases, # field containing count of events\n                n = py, # field containing population denominators\n                stdpop = WorldStandardPopulation, # field containing standard populations\n                type = \"standard\"\n        ) |&gt; \n        mutate(crude_rate = total_count/total_pop*100000) |&gt; \n        relocate(crude_rate, .before = value) |&gt; \n        rename(cases = total_count, ASRate = value, lower_CI = lowercl, upper_CI = uppercl) |&gt; \n        mutate(across(c(crude_rate:upper_CI), ~ round(.x, 2)))\n\n\n\nPlotsTable\n\n\n\n\nCode\ndsr_swiss_WSP |&gt; \n        filter(cancer_label %in% c(\"All sites\", \"All sites but skin\", \"Other skin\")) |&gt; \n        ggplot(aes(x = ASRate, y = id_region, color = sex, fill = sex))+\n        geom_col(position = position_dodge(width = 0.4))+\n        theme_bw()+\n        labs(x = \"Age-standardised incidence rate, per 100,000\", \n             y = NULL,\n             color = NULL, fill = NULL)+\n        geom_errorbarh(aes(xmin = lower_CI, xmax = upper_CI),\n                       height = 0.4, \n                       linewidth = 0.5,\n                       position = position_dodge(width = 0.4))+\n        facet_wrap(.~cancer_label, \n                   labeller = label_wrap_gen(),\n                   ncol = 5)+\n        theme(legend.position = \"top\")\n\n\n\n\n\n\n\n\n\n\n\nCode\ndsr_swiss_WSP |&gt; \n        filter(!cancer_label %in% c(\"All sites\", \"All sites but skin\", \"Other skin\")) |&gt; \n        # filter(cancer_label %in% c(\"Breast\", \"Colon\", \"Adrenal gland\")) |&gt;\n        ggplot(aes(x = ASRate, y = id_region, color = sex, fill = sex))+\n        geom_col(position = position_dodge(width = 0.4))+\n        theme_bw()+\n        labs(x = \"Age-standardised incidence rate, per 100,000\", \n             y = NULL,\n             color = NULL, fill = NULL)+\n        geom_errorbarh(aes(xmin = lower_CI, xmax = upper_CI),\n                       height = 0.4, \n                       linewidth = 0.5,\n                       position = position_dodge(width = 0.4))+\n        facet_wrap(.~cancer_label, \n                   labeller = label_wrap_gen(),\n                   ncol = 5)+\n        theme(legend.position = \"top\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ndsr_swiss_WSP |&gt; \n        DT::datatable(\n                filter = \"top\",\n                options = list(\n                        pageLength = 26 \n                ),\n                rownames = FALSE, # set to FALSE for cleaner look\n                class = 'cell-border stripe hover nowrap compact'\n        )\n\n\n\n\n\n\n\n\n\n\n\n\n\nBy age (crude rates only)\n\n\nCode\nage_crude &lt;- swiss_XII |&gt; \n        group_by(cancer_label, id_region, age_ESP, sex) |&gt; \n        summarise(crude_rate = cases/py*100000, across()) |&gt; \n        select(cancer_label:crude_rate, cases, py, period) |&gt; \n        mutate(crude_rate = round(crude_rate, 2))\n\n\n\nPlots for GenevaTables\n\n\n\n\nCode\nage_crude |&gt; \n        # Remove the text \" years\" while keeping the factor structure\n        mutate(age_ESP = fct_relabel(age_ESP, ~ str_remove(.x, \" years\"))) |&gt; \n        filter(id_region %in% c(\"Geneva\")) |&gt; \n        # filter(cancer_label %in% c(\"All sites\", \"Colon\", \"Breast\")) |&gt; \n        ggplot(aes(x=age_ESP, y = crude_rate, color = sex, group = sex))+\n        geom_path()+\n        facet_wrap(.~cancer_label, scales = \"free_y\",\n                   labeller = label_wrap_gen(),\n                   ncol = 6\n                   )+\n        labs(y = \"Crude incidence rate per 100,000\", x = \"Age group\", color = NULL)+\n        theme_bw()+\n        # Show only every third label on x-axis\n        scale_x_discrete(breaks = \\(x)x[seq(3, length(x), by = 3)])+\n        theme(axis.text.x = element_text(angle = 50, vjust = 0.8),\n              legend.position = \"top\")\n\n\n\n\n\n\n\n\n\n\n\n\nSex: MaleSex: Female\n\n\n\n\nCode\n# Format it as a table\nage_crude |&gt;     \n        filter(sex == \"Male\") |&gt; \nDT::datatable(\n        filter = \"top\",\n        options = list(\n                pageLength = 18 \n        ),\n        rownames = FALSE, # set to FALSE for cleaner look\n        class = 'cell-border stripe hover nowrap compact'\n)\n\n\n\n\n\n\n\n\n\n\nCode\nage_crude |&gt;     \n        filter(sex == \"Female\") |&gt; \n        DT::datatable(\n                filter = \"top\",\n                options = list(\n                        pageLength = 18 \n                ),\n                rownames = FALSE, # set to FALSE for cleaner look\n                class = 'cell-border stripe hover nowrap compact'\n        )\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIndirect standardisation\nDuring the pre-processing, I aggregated the data to the level of the whole of Switzerland, per cancer type and summing the cases and person-years by age and sex. These national reference cases and person-years are then used below to calculate indirectly standardised rates and ratios for each canton for each cancer type, by sex.\n\nIndirectly standardised rates\n\n\nCode\nind.rate &lt;-\n        swiss_XII |&gt; \n        group_by(cancer_label, sex, id_region) |&gt; \n        PHEindicatormethods::calculate_ISRate(\n                x = cases,\n                n = py,\n                x_ref = cases_ref, # national cases as reference\n                n_ref = py_ref, # national py as reference\n                refpoptype = \"field\"\n        ) |&gt; \n        rename(ISRate = value, lower_CI = lowercl, upper_CI = uppercl) |&gt; \n        mutate(across(c(expected:upper_CI), ~ round(.x, 2)))\n\n# Generate the table\nind.rate |&gt; \n        select(-c(confidence:method)) |&gt; \n        DT::datatable(\n                caption = \"Indirectly standardised rate per 100,000, with 95% CI\",\n                filter = \"top\",\n                options = list(\n                        pageLength = 14 \n                ),\n                rownames = FALSE, # set to FALSE for cleaner look\n                class = 'cell-border stripe hover nowrap compact'\n        )\n\n\n\n\n\n\n\n\nIndirectly standardised ratios\n\n\nCode\nind.ratio &lt;-\n        swiss_XII |&gt; \n        group_by(cancer_label, sex, id_region) |&gt; \n        PHEindicatormethods::calculate_ISRatio(\n                x = cases,\n                n = py,\n                x_ref = cases_ref, # national cases as reference\n                n_ref = py_ref, # national py as reference\n                refpoptype = \"field\"\n        ) |&gt; \n        rename(ISRatio = value, lower_CI = lowercl, upper_CI = uppercl) |&gt; \n        mutate(across(c(expected:upper_CI), ~ round(.x, 2)))\n\n\n\nForest plotsTable\n\n\n\nBy cancer typeGeneva\n\n\n(for a select few cancer types)\n\n\nCode\nind.ratio |&gt; \n        filter(cancer_label %in%\n                       c(\"All sites\", \"Colon\", \"Rectum\",\n                         \"Bladder\", \"Prostate\", \"Breast\",\n                         \"Bone\", \"Vulva\", \"Lung (incl. trachea and bronchus)\"\n                       )) |&gt;\n        mutate(est_ci_label = sprintf(\"%.2f [%.2f-%.2f]\", \n                                      ISRatio, lower_CI, upper_CI)\n        ) |&gt; \n        # arrange(id_region, sex) |&gt; \n        # Start the plot\n        ggplot(aes(x = ISRatio, y = id_region, color = sex))+\n        # Add CI\n        geom_errorbarh(aes(xmin = lower_CI, xmax = upper_CI), \n                       height = 0.4, \n                       linewidth = 0.5,\n                       position = position_dodge(width = 0.5)\n        )+\n        # Add point estimate\n        geom_point(size = 1.5, \n                   position = position_dodge(width = 0.5))+\n        # Add vertical reference line at ISRatio = 1\n        geom_vline(xintercept = 1, linetype = \"dashed\", color = \"grey50\")+\n        # Separate plots by cancer type\n        facet_wrap(~ cancer_label, \n                   labeller = label_wrap_gen(),\n                   ncol = 3\n                   # scales = \"free_x\" # Use free_y so regions aren't duplicated across facets\n        )+\n        # Add labels and title\n        labs(\n                title = \"Indirectly Standardized Ratio by Canton and Sex\", \n                subtitle = \"(reference: national data for Switzerland)\",\n                x = \"IS Ratio (95% CI)\",\n                y = NULL,\n                color = NULL # Legend title\n        ) +\n        # Use a clean theme\n        theme_bw(base_size = 12) +\n        theme(\n                panel.grid.major.x = element_blank(),\n                panel.grid.minor.x = element_blank(),\n                # strip.text = element_text(face = \"bold\"), # Make facet titles bold\n                axis.text.y = element_text(size = 12),    # Adjust y-axis text size if needed\n                # panel.spacing.y = unit(1, \"lines\"),      # Add space between facets\n                legend.position = \"top\"                  # Position legend\n        )\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nind.ratio |&gt; \n        filter(id_region %in%c(\"Geneva\")) |&gt;\n        mutate(est_ci_label = sprintf(\"%.2f [%.2f-%.2f]\", \n                                      ISRatio, lower_CI, upper_CI)\n        ) |&gt; \n        # arrange(id_region, sex) |&gt; \n        # Start the plot\n        ggplot(aes(x = ISRatio, y = cancer_label, color = sex))+\n        # Add CI\n        geom_errorbarh(aes(xmin = lower_CI, xmax = upper_CI), \n                       height = 0.4, \n                       linewidth = 0.5,\n                       position = position_dodge(width = 0.5)\n        )+\n        # Add point estimate\n        geom_point(size = 1.5, \n                   position = position_dodge(width = 0.5))+\n        # Add vertical reference line at ISRatio = 1\n        geom_vline(xintercept = 1, linetype = \"dashed\", color = \"grey50\")+\n        # Separate plots by cancer type\n        facet_wrap(~ id_region, \n                   labeller = label_wrap_gen(),\n                   ncol = 3\n                   # scales = \"free_x\" # Use free_y so regions aren't duplicated across facets\n        )+\n        # Add labels and title\n        labs(\n                title = \"Indirectly Standardized Ratio by Canton and Sex\", \n                subtitle = \"(reference: national data for Switzerland)\",\n                x = \"IS Ratio (95% CI)\",\n                y = NULL,\n                color = NULL # Legend title\n        ) +\n        # Use a clean theme\n        theme_bw(base_size = 12) +\n        theme(\n                panel.grid.major.x = element_blank(),\n                panel.grid.minor.x = element_blank(),\n                # strip.text = element_text(face = \"bold\"), # Make facet titles bold\n                axis.text.y = element_text(size = 12),    # Adjust y-axis text size if needed\n                # panel.spacing.y = unit(1, \"lines\"),      # Add space between facets\n                legend.position = \"top\"                  # Position legend\n        )\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\n# Generate the table\nind.ratio |&gt; \n        select(-c(confidence:method)) |&gt; \n        DT::datatable(\n                caption = \"indirectly standardised ratio x 1, with 95% CI\",\n                filter = \"top\",\n                options = list(\n                        pageLength = 13 \n                ),\n                rownames = FALSE, # set to FALSE for cleaner look\n                class = 'cell-border stripe hover nowrap compact'\n        )"
  },
  {
    "objectID": "02_analysis.html#ci5-i-xii-geneva-annual-trends-1973-2017",
    "href": "02_analysis.html#ci5-i-xii-geneva-annual-trends-1973-2017",
    "title": "R coding to calculate standardised rates and ratios from cancer registry data",
    "section": "CI5 I-XII: Geneva (annual trends 1973-2017)",
    "text": "CI5 I-XII: Geneva (annual trends 1973-2017)\nThis section uses annual data from Volumes I to XII of the IARC’s “Cancer Incidence in Five Continents (CI5)” collaboration: https://ci5.iarc.fr/ci5plus/download. The full dataset was then restricted to data from Switzerland-based cancer registries only.\nThe data pre-processing code can be found in the 01_prep.R file on the GitHub repository for this page.\nDirect standardisation, using either the European or the World Standard Populations, was used to calculate age-standardised rates for each year.\n\nUsing European Standard PopulationUsing World Standard Population\n\n\n\n\nCode\n# Prep data\nannual_trends_ESP &lt;- swiss_plus |&gt; \n        filter(!cancer_label %in% c(\"All cancers excluding non-melanoma skin\")) |&gt; \n        # filter(cancer_label %in% c(\n        #         \"Prostate\", \"Lung (incl. trachea)\",\n        #         \"Bladder\", \"Melanoma of skin\", \"Colon\", \n        #         \"Rectum and anus\", \"Breast\", \"Corpus uteri\", \n        #         \"Pancreas\", \"Ovary\")\n        # ) |&gt; \n        filter(id_region %in% c(\"Geneva\")) |&gt;\n        # Add grouping variables of interest\n        group_by(year, cancer_label, id_region, sex) |&gt; \n        PHEindicatormethods::calculate_dsr(\n                x = cases, # field containing count of events\n                n = py, # field containing population denominators\n                stdpop = EuropeanStandardPopulation, # field containing standard populations\n                type = \"standard\"\n        ) |&gt; \n        mutate(crude_rate = total_count/total_pop*100000) |&gt; \n        relocate(crude_rate, .before = value) |&gt; \n        rename(cases = total_count, ASR = value, lower_CI = lowercl, upper_CI = uppercl) |&gt; \n        mutate(across(c(crude_rate:upper_CI), ~ round(.x, 2))) |&gt; \n        ungroup()\n\n# Plot\nannual_trends_ESP |&gt; \n        # mutate(sex = as.character(sex)) |&gt; \n        mutate(year = ymd(paste0(year, \"-01-01\"))) |&gt; \n        ggplot(aes(x = year, y = ASR, color = sex, fill = sex))+\n        geom_ribbon(\n                aes(ymin = lower_CI, ymax = upper_CI), \n                color = NA,\n                alpha =0.3)+\n        geom_line()+\n        facet_wrap(.~cancer_label, labeller = label_wrap_gen())+\n        labs(\n                x = \"Year\",\n                y = \"Age-standardized incidence rate (per 100,000)\",\n                color = NULL,\n                fill = NULL\n        )+\n        theme_bw()+\n        theme(\n                legend.position = \"top\",\n                axis.text.x = element_text(\n                        angle = 40, vjust = 0.5\n                        # , size = 12\n                ))\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\n# Prep data\nannual_trends_WSP &lt;- swiss_plus |&gt; \n        filter(!cancer_label %in% c(\"All cancers excluding non-melanoma skin\")) |&gt; \n        # filter(cancer_label %in% c(\n        #         \"Prostate\", \"Lung (incl. trachea)\",\n        #         \"Bladder\", \"Melanoma of skin\", \"Colon\", \n        #         \"Rectum and anus\", \"Breast\", \"Corpus uteri\", \n        #         \"Pancreas\", \"Ovary\")\n        # ) |&gt; \n        filter(id_region %in% c(\"Geneva\")) |&gt;\n        # Add grouping variables of interest\n        group_by(year, cancer_label, id_region, sex) |&gt; \n        PHEindicatormethods::calculate_dsr(\n                x = cases, # field containing count of events\n                n = py, # field containing population denominators\n                stdpop = WorldStandardPopulation, # field containing standard populations\n                type = \"standard\"\n        ) |&gt; \n        mutate(crude_rate = total_count/total_pop*100000) |&gt; \n        relocate(crude_rate, .before = value) |&gt; \n        rename(cases = total_count, ASR = value, lower_CI = lowercl, upper_CI = uppercl) |&gt; \n        mutate(across(c(crude_rate:upper_CI), ~ round(.x, 2))) |&gt; \n        ungroup()\n\n# Plot\nannual_trends_WSP |&gt; \n        mutate(year = ymd(paste0(year, \"-01-01\"))) |&gt; \n        ggplot(aes(x = year, y = ASR, fill = sex, color = sex))+\n        geom_ribbon(\n                aes(ymin = lower_CI, ymax = upper_CI), \n                color = NA,\n                alpha =0.3\n        )+\n        geom_line()+\n        facet_wrap(.~cancer_label, labeller = label_wrap_gen())+\n        labs(\n                x = \"Year\",\n                y = \"Age-standardized incidence rate (per 100,000)\",\n                color = NULL,\n                fill = NULL\n        )+\n        theme_bw()+\n        theme(\n                legend.position = \"top\",\n                axis.text.x = element_text(\n                        angle = 40, vjust = 0.5\n                        # , size = 12\n                ))"
  }
]